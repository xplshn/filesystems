name: CI
on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */24 * *'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch:
          - latest-stable
          - edge
        arch:
          - x86_64
          - aarch64
    steps:
      - name: Checkout alpine-make-rootfs repository
        uses: actions/checkout@v4
        with:
          repository: alpinelinux/alpine-make-rootfs

      - name: Build rootfs using script from stdin
        run: |
          mkdir -p "${{ github.workspace }}/dist"
          sudo "${{ github.workspace }}/alpine-make-rootfs" \
              --branch ${{ matrix.branch }} \
              --packages 'mimalloc' \
              --script-chroot \
              "${{ github.workspace }}/dist/AlpineLinux_${{ matrix.branch }}-${{ matrix.arch }}.tar" - <<'SHELL'
                      printf '\nLD_PRELOAD="/usr/lib/libmimalloc.so"\n' >> /etc/profile
                      echo "Check out [filesystems](https://github.com/xplshn/filesystems) for more information about this rootfs and its purpose" >> /etc/motd
          SHELL
          zstd -k "${{ github.workspace }}/dist/AlpineLinux_${{ matrix.branch }}-${{ matrix.arch }}.tar"
          gzip -k "${{ github.workspace }}/dist/AlpineLinux_${{ matrix.branch }}-${{ matrix.arch }}.tar"
          xz   -k "${{ github.workspace }}/dist/AlpineLinux_${{ matrix.branch }}-${{ matrix.arch }}.tar"

      - name: List contents of dist directory
        run: ls -l "${{ github.workspace }}/dist"
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rootfs-${{ matrix.branch }}-${{ matrix.arch }}
          path: ${{ github.workspace }}/dist/AlpineLinux_${{ matrix.branch }}-${{ matrix.arch }}.tar.zst
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set release tag
        id: set_tag
        run: echo "RDATE=$(date +%d-%m-%Y_%H-%M-%S)" >> $GITHUB_ENV
        
      - name: Create dist directory
        run: mkdir -p dist
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          
      - name: List all downloaded artifacts
        run: find dist -type f | sort
          
      - name: Create Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          name: "${{ env.RDATE }}"
          tag_name: "${{ env.RDATE }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            dist/**/*
